version: '3.8'

services:
  podcast-manager:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: podcast-manager
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_PATH=/app/data/podcast-manager.db
      - DOWNLOAD_DIRECTORY=/app/downloads
    volumes:
      - podcast_data:/app/data
      - podcast_downloads:/app/downloads
      - podcast_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3000, path: '/api/health', timeout: 2000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - podcast_network

  # Development service
  podcast-manager-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: podcast-manager-dev
    ports:
      - "5173:5173"
      - "3001:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - podcast_network
    profiles:
      - dev

volumes:
  podcast_data:
    driver: local
  podcast_downloads:
    driver: local
  podcast_logs:
    driver: local

networks:
  podcast_network:
    driver: bridge